plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id 'org.jetbrains.kotlin.kapt' version '1.9.25'
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 코틀린 표준 라이브러리 추가
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.7.1")
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.113.Final'
    implementation 'io.netty:netty-all:4.1.113.Final'

    // 모델 맵퍼
    implementation "org.modelmapper:modelmapper:2.4.4"

    // Spring과 관련된 의존성
    implementation 'net.coobird:thumbnailator:0.4.20'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

    // JWT 관련 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // QueryDSL 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    kapt 'jakarta.annotation:jakarta.annotation-api'
    kapt 'jakarta.persistence:jakarta.persistence-api'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 개발 및 테스트 의존성
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

// Querydsl 설정부 추가 - start
def generated = file("src/main/generated")

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = generated
}

// kotlin source set에 querydsl QClass 위치 추가
sourceSets {
    main {
        kotlin.srcDirs += [generated]
    }
}

// gradle clean 시에 QClass 디렉토리 삭제
tasks.named("clean") {
    doLast {
        generated.deleteDir()
    }
}

kapt {
    generateStubs = true
}
// Querydsl 설정부 추가 - end

tasks.test {
    useJUnitPlatform()
}
